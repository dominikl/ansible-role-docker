---
# Setup a Docker node

- include: redhat.yml
  when: ansible_distribution == 'RedHat'

- name: docker | download repository config
  become: true
  get_url:
    dest: /etc/yum.repos.d/docker-ce.repo.original
    url: https://download.docker.com/linux/centos/docker-ce.repo

- name: docker | read repository config
  become: true
  slurp:
    src: /etc/yum.repos.d/docker-ce.repo.original
  register: _docker_repo
  # Unnecessarily long output
  no_log: true

- name: docker | write repository config
  become: true
  copy:
    content: >-
      {{ _docker_repo.content | b64decode |
         regex_replace('\$releasever',
           (docker_repo_force_releasever | length > 0) | ternary(
           docker_repo_force_releasever, '$releasever')
         )
      }}
    dest: /etc/yum.repos.d/docker-ce.repo

- name: docker | install docker
  become: true
  yum:
    name: >
      docker-ce{{ (docker_version | length > 0) |
      ternary('-' + docker_version, '') }}
    state: present

- name: docker | setup lvm docker-pool
  become: true
  lvol:
    vg: "{{ docker_vgname }}"
    lv: docker-pool
    size: "{{ docker_poolsize }}"
    opts: >
      {{ docker_lvopts | default(None) }} --thin --poolmetadatasize
      {{ docker_metadatasize }}
  when: docker_use_custom_storage

- name: docker | configuration directory
  become: true
  file:
    path: /etc/docker
    state: directory

# https://docs.docker.com/engine/reference/commandline/dockerd/#linux-configuration-file
- name: docker | configure docker options
  become: true
  template:
    src: etc-docker-daemon-json.j2
    dest: /etc/docker/daemon.json
    backup: true
  notify:
    - restart docker

- name: docker | enable
  become: true
  service:
    name: docker
    state: started
    enabled: true
  when: docker_systemd_setup

- name: docker | group members
  become: true
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_groupmembers }}"
